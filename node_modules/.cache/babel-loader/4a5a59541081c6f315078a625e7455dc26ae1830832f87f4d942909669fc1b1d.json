{"ast":null,"code":"import React,{useState,useEffect}from'react';import SearchBar from'./SearchBar';import CardList from'./CardList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[searchTerm,setSearchTerm]=useState('');const[filterType,setFilterType]=useState('name');const[filteredCards,setFilteredCards]=useState([]);// Function to handle search and update state\nconst handleSearch=(term,type)=>{setSearchTerm(term);setFilterType(type);};// Effect hook to fetch cards based on search term and filter type\nuseEffect(()=>{const fetchCards=async()=>{try{const response=await fetch(\"https://api.magicthegathering.io/v1/cards?\".concat(filterType,\"=\").concat(searchTerm));const data=await response.json();// Extract the array of cards from the response and update the state\nconst searchResults=data.cards||[];setFilteredCards(searchResults);}catch(error){console.error('Error fetching cards:',error);}};fetchCards();},[searchTerm,filterType]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Magic: The Gathering Card Search\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch,placeholder:\"Search by name, artist, set, or color\"}),/*#__PURE__*/_jsx(CardList,{cards:filteredCards})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","CardList","jsx","_jsx","jsxs","_jsxs","App","searchTerm","setSearchTerm","filterType","setFilterType","filteredCards","setFilteredCards","handleSearch","term","type","fetchCards","response","fetch","concat","data","json","searchResults","cards","error","console","children","onSearch","placeholder"],"sources":["/workspaces/SI-579-Final-Project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport CardList from './CardList';\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('name');\n  const [filteredCards, setFilteredCards] = useState([]);\n\n  // Function to handle search and update state\n  const handleSearch = (term, type) => {\n    setSearchTerm(term);\n    setFilterType(type);\n  };\n\n  // Effect hook to fetch cards based on search term and filter type\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await fetch(\n          `https://api.magicthegathering.io/v1/cards?${filterType}=${searchTerm}`\n        );\n        const data = await response.json();\n        // Extract the array of cards from the response and update the state\n        const searchResults = data.cards || [];\n        setFilteredCards(searchResults);\n      } catch (error) {\n        console.error('Error fetching cards:', error);\n      }\n    };\n\n    fetchCards();\n  }, [searchTerm, filterType]);\n\n  return (\n    <div>\n      <h1>Magic: The Gathering Card Search</h1>\n      <SearchBar onSearch={handleSearch} placeholder=\"Search by name, artist, set, or color\" />\n      <CardList cards={filteredCards} />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACW,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,MAAM,CAAC,CACpD,KAAM,CAACa,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEtD;AACA,KAAM,CAAAe,YAAY,CAAGA,CAACC,IAAI,CAAEC,IAAI,GAAK,CACnCP,aAAa,CAACM,IAAI,CAAC,CACnBJ,aAAa,CAACK,IAAI,CAAC,CACrB,CAAC,CAED;AACAhB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,8CAAAC,MAAA,CACmBV,UAAU,MAAAU,MAAA,CAAIZ,UAAU,CACvE,CAAC,CACD,KAAM,CAAAa,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC;AACA,KAAM,CAAAC,aAAa,CAAGF,IAAI,CAACG,KAAK,EAAI,EAAE,CACtCX,gBAAgB,CAACU,aAAa,CAAC,CACjC,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAEDR,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACT,UAAU,CAAEE,UAAU,CAAC,CAAC,CAE5B,mBACEJ,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAI,kCAAgC,CAAI,CAAC,cACzCvB,IAAA,CAACH,SAAS,EAAC2B,QAAQ,CAAEd,YAAa,CAACe,WAAW,CAAC,uCAAuC,CAAE,CAAC,cACzFzB,IAAA,CAACF,QAAQ,EAACsB,KAAK,CAAEZ,aAAc,CAAE,CAAC,EAC/B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}