{"ast":null,"code":"var _jsxFileName = \"/workspaces/SI-579-Final-Project/src/CardList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = ({\n  cards\n}) => {\n  // Use a map to store unique cards based on their name\n  const uniqueCardsMap = new Map();\n\n  // Iterate through the cards and add them to the map using the card's name as the key\n  cards.forEach(card => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n\n  // Convert the map values to an array of unique cards\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uniqueCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), \" \", card.name, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 52\n          }, this), ' ', card.artist, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Set:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this), \" \", card.set, \" |\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), \" \", card.colors ? card.colors.join(', ') : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), card.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.imageUrl,\n          alt: card.name,\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["CardList","cards","uniqueCardsMap","Map","forEach","card","has","name","set","uniqueCards","Array","from","values","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","colors","join","imageUrl","src","alt","style","width","id","_c","$RefreshReg$"],"sources":["/workspaces/SI-579-Final-Project/src/CardList.js"],"sourcesContent":["\n\nconst CardList = ({ cards }) => {\n  // Use a map to store unique cards based on their name\n  const uniqueCardsMap = new Map();\n  \n  // Iterate through the cards and add them to the map using the card's name as the key\n  cards.forEach((card) => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n\n  // Convert the map values to an array of unique cards\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n\n  return (\n    <div>\n      <h2>Search Results</h2>\n      <ul>\n        {uniqueCards.map((card) => (\n          <li key={card.id}>\n            <div>\n              <strong>Name:</strong> {card.name} | <strong>Artist:</strong>{' '}\n              {card.artist} | <strong>Set:</strong> {card.set} |{' '}\n              <strong>Color:</strong> {card.colors ? card.colors.join(', ') : 'N/A'}\n            </div>\n            {card.imageUrl && (\n              <img src={card.imageUrl} alt={card.name} style={{ width: '100px' }} />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nexport default CardList;"],"mappings":";;AAEA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC9B;EACA,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;;EAEhC;EACAF,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;IACtB,IAAI,CAACH,cAAc,CAACI,GAAG,CAACD,IAAI,CAACE,IAAI,CAAC,EAAE;MAClCL,cAAc,CAACM,GAAG,CAACH,IAAI,CAACE,IAAI,EAAEF,IAAI,CAAC;IACrC;EACF,CAAC,CAAC;;EAEF;EACA,MAAMI,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACT,cAAc,CAACU,MAAM,CAAC,CAAC,CAAC;EAEvD,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBL,OAAA;MAAAC,QAAA,EACGL,WAAW,CAACU,GAAG,CAAEd,IAAI,iBACpBQ,OAAA;QAAAC,QAAA,gBACED,OAAA;UAAAC,QAAA,gBACED,OAAA;YAAAC,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACE,IAAI,EAAC,KAAG,eAAAM,OAAA;YAAAC,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAAC,GAAG,EAChEb,IAAI,CAACe,MAAM,EAAC,KAAG,eAAAP,OAAA;YAAAC,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACG,GAAG,EAAC,IAAE,EAAC,GAAG,eACtDK,OAAA;YAAAC,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACb,IAAI,CAACgB,MAAM,GAAGhB,IAAI,CAACgB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,EACLb,IAAI,CAACkB,QAAQ,iBACZV,OAAA;UAAKW,GAAG,EAAEnB,IAAI,CAACkB,QAAS;UAACE,GAAG,EAAEpB,IAAI,CAACE,IAAK;UAACmB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACtE;MAAA,GARMb,IAAI,CAACuB,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACW,EAAA,GAjCI7B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}