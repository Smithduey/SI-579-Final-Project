{"ast":null,"code":"var _jsxFileName = \"/workspaces/SI-579-Final-Project/src/CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = ({\n  cards,\n  addToDeck\n}) => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const addToDeckHandler = card => {\n    if (card.imageUrl) {\n      const updatedDeck = [...deck, card.imageUrl];\n      setDeck(updatedDeck);\n      addToDeck(updatedDeck); // Pass the updated deck to the parent component\n      localStorage.setItem('deck', JSON.stringify(updatedDeck));\n    }\n  };\n  const uniqueCardsMap = new Map();\n  cards.forEach(card => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uniqueCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), \" \", card.name, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Artist:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 56\n              }, this), ' ', card.artist, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Set:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 35\n              }, this), \" \", card.set, \" |\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), \" \", card.colors ? card.colors.join(', ') : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), card.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.imageUrl,\n              alt: card.name,\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addToDeckHandler(card),\n              children: \"Add to Deck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              padding: 0\n            },\n            children: deck.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                alt: `Card ${index + 1}`,\n                style: {\n                  width: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CardList, \"h85ghwWFuAZ0QkT43K1tI9U/CM0=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardList","cards","addToDeck","_s","deck","setDeck","addToDeckHandler","card","imageUrl","updatedDeck","localStorage","setItem","JSON","stringify","uniqueCardsMap","Map","forEach","has","name","set","uniqueCards","Array","from","values","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flex","map","artist","colors","join","src","alt","width","onClick","id","listStyleType","padding","index","marginBottom","_c","$RefreshReg$"],"sources":["/workspaces/SI-579-Final-Project/src/CardList.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CardList = ({ cards, addToDeck }) => {\n  const [deck, setDeck] = useState([]);\n\n  const addToDeckHandler = (card) => {\n    if (card.imageUrl) {\n      const updatedDeck = [...deck, card.imageUrl];\n      setDeck(updatedDeck);\n      addToDeck(updatedDeck); // Pass the updated deck to the parent component\n      localStorage.setItem('deck', JSON.stringify(updatedDeck));\n    }\n  };\n\n  const uniqueCardsMap = new Map();\n\n  cards.forEach((card) => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n\n  return (\n    <div>\n      <h2>Search Results</h2>\n      <div style={{ display: 'flex' }}>\n        <div style={{ flex: 1 }}>\n          <ul>\n            {uniqueCards.map((card) => (\n              <li key={card.id}>\n                <div>\n                  <strong>Name:</strong> {card.name} | <strong>Artist:</strong>{' '}\n                  {card.artist} | <strong>Set:</strong> {card.set} |{' '}\n                  <strong>Color:</strong> {card.colors ? card.colors.join(', ') : 'N/A'}\n                </div>\n                {card.imageUrl && (\n                  <img src={card.imageUrl} alt={card.name} style={{ width: '100px' }} />\n                )}\n                <button onClick={() => addToDeckHandler(card)}>Add to Deck</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div style={{ flex: 1 }}>\n          <div>\n            <h3>Deck</h3>\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\n              {deck.map((imageUrl, index) => (\n                <li key={index} style={{ marginBottom: '10px' }}>\n                  <img src={imageUrl} alt={`Card ${index + 1}`} style={{ width: '100px' }} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACjB,MAAMC,WAAW,GAAG,CAAC,GAAGL,IAAI,EAAEG,IAAI,CAACC,QAAQ,CAAC;MAC5CH,OAAO,CAACI,WAAW,CAAC;MACpBP,SAAS,CAACO,WAAW,CAAC,CAAC,CAAC;MACxBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMK,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;EAEhCd,KAAK,CAACe,OAAO,CAAET,IAAI,IAAK;IACtB,IAAI,CAACO,cAAc,CAACG,GAAG,CAACV,IAAI,CAACW,IAAI,CAAC,EAAE;MAClCJ,cAAc,CAACK,GAAG,CAACZ,IAAI,CAACW,IAAI,EAAEX,IAAI,CAAC;IACrC;EACF,CAAC,CAAC;EAEF,MAAMa,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACR,cAAc,CAACS,MAAM,CAAC,CAAC,CAAC;EAEvD,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA;MAAK8B,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC9BzB,OAAA;QAAK8B,KAAK,EAAE;UAAEE,IAAI,EAAE;QAAE,CAAE;QAAAP,QAAA,eACtBzB,OAAA;UAAAyB,QAAA,EACGJ,WAAW,CAACY,GAAG,CAAEzB,IAAI,iBACpBR,OAAA;YAAAyB,QAAA,gBACEzB,OAAA;cAAAyB,QAAA,gBACEzB,OAAA;gBAAAyB,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACW,IAAI,EAAC,KAAG,eAAAnB,OAAA;gBAAAyB,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAAC,GAAG,EAChErB,IAAI,CAAC0B,MAAM,EAAC,KAAG,eAAAlC,OAAA;gBAAAyB,QAAA,EAAQ;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAACY,GAAG,EAAC,IAAE,EAAC,GAAG,eACtDpB,OAAA;gBAAAyB,QAAA,EAAQ;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrB,IAAI,CAAC2B,MAAM,GAAG3B,IAAI,CAAC2B,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;YAAA;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,EACLrB,IAAI,CAACC,QAAQ,iBACZT,OAAA;cAAKqC,GAAG,EAAE7B,IAAI,CAACC,QAAS;cAAC6B,GAAG,EAAE9B,IAAI,CAACW,IAAK;cAACW,KAAK,EAAE;gBAAES,KAAK,EAAE;cAAQ;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACtE,eACD7B,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACC,IAAI,CAAE;cAAAiB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAT5DrB,IAAI,CAACiC,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACN7B,OAAA;QAAK8B,KAAK,EAAE;UAAEE,IAAI,EAAE;QAAE,CAAE;QAAAP,QAAA,eACtBzB,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAAyB,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb7B,OAAA;YAAI8B,KAAK,EAAE;cAAEY,aAAa,EAAE,MAAM;cAAEC,OAAO,EAAE;YAAE,CAAE;YAAAlB,QAAA,EAC9CpB,IAAI,CAAC4B,GAAG,CAAC,CAACxB,QAAQ,EAAEmC,KAAK,kBACxB5C,OAAA;cAAgB8B,KAAK,EAAE;gBAAEe,YAAY,EAAE;cAAO,CAAE;cAAApB,QAAA,eAC9CzB,OAAA;gBAAKqC,GAAG,EAAE5B,QAAS;gBAAC6B,GAAG,EAAG,QAAOM,KAAK,GAAG,CAAE,EAAE;gBAACd,KAAK,EAAE;kBAAES,KAAK,EAAE;gBAAQ;cAAE;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GADpEe,KAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1DIH,QAAQ;AAAA6C,EAAA,GAAR7C,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}