{"ast":null,"code":"var _jsxFileName = \"/workspaces/SI-579-Final-Project/src/CardList.js\",\n  _s = $RefreshSig$();\n// CardList.js\nimport React, { useState } from 'react';\nimport DeckDisplay from './DeckDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = ({\n  cards\n}) => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  useEffect(() => {\n    // Load deck from localStorage on component mount\n    const storedDeck = localStorage.getItem('deck');\n    if (storedDeck) {\n      setDeck(JSON.parse(storedDeck));\n    }\n  }, []);\n  const addToDeck = card => {\n    if (card.imageUrl) {\n      const updatedDeck = [...deck, card.imageUrl];\n      setDeck(updatedDeck);\n      // Update localStorage when deck changes\n      localStorage.setItem('deck', JSON.stringify(updatedDeck));\n    }\n  };\n  const filterResults = query => {\n    const filtered = uniqueCards.filter(card => card.name.toLowerCase().includes(query.toLowerCase()) || card.colors && card.colors.join(', ').toLowerCase().includes(query.toLowerCase()));\n    setFilteredCards(filtered);\n  };\n  const uniqueCardsMap = new Map();\n  cards.forEach(card => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-start'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Filter results...\",\n          onChange: e => filterResults(e.target.value),\n          style: {\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), filteredCards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No cards found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: 'none',\n            padding: 0\n          },\n          children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '20px',\n              padding: '10px',\n              border: '1px solid #ddd',\n              borderRadius: '8px',\n              display: 'flex',\n              width: '600px'\n            },\n            children: [card.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginRight: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.imageUrl,\n                alt: card.name,\n                style: {\n                  width: '250px',\n                  height: '300px',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), \" \", card.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 56\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Artist:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), \" \", card.artist || 'N/A', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Set:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), \" \", card.set || 'N/A', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), \" \", card.colors ? card.colors.join(', ') : 'N/A', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 92\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Text:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), \" \", card.text || 'N/A', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 65\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addToDeck(card),\n                style: {\n                  marginTop: '10px',\n                  background: '#4CAF50',\n                  color: 'white',\n                  padding: '8px 12px',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  border: 'none'\n                },\n                children: \"Add to Deck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckDisplay, {\n      deck: deck,\n      cardList: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CardList, \"fn7q725UF5lWvFuqmz80wCxWolg=\");\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useState","DeckDisplay","jsxDEV","_jsxDEV","CardList","cards","_s","deck","setDeck","filteredCards","setFilteredCards","useEffect","storedDeck","localStorage","getItem","JSON","parse","addToDeck","card","imageUrl","updatedDeck","setItem","stringify","filterResults","query","filtered","uniqueCards","filter","name","toLowerCase","includes","colors","join","uniqueCardsMap","Map","forEach","has","set","Array","from","values","style","display","alignItems","children","flex","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","marginBottom","length","listStyle","padding","map","border","borderRadius","width","marginRight","src","alt","height","boxShadow","artist","text","onClick","marginTop","background","color","cursor","id","cardList","_c","$RefreshReg$"],"sources":["/workspaces/SI-579-Final-Project/src/CardList.js"],"sourcesContent":["// CardList.js\nimport React, { useState } from 'react';\nimport DeckDisplay from './DeckDisplay';\n\nconst CardList = ({ cards }) => {\n  const [deck, setDeck] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n\n  useEffect(() => {\n    // Load deck from localStorage on component mount\n    const storedDeck = localStorage.getItem('deck');\n    if (storedDeck) {\n      setDeck(JSON.parse(storedDeck));\n    }\n  }, []);\n\n  const addToDeck = (card) => {\n    if (card.imageUrl) {\n      const updatedDeck = [...deck, card.imageUrl];\n      setDeck(updatedDeck);\n      // Update localStorage when deck changes\n      localStorage.setItem('deck', JSON.stringify(updatedDeck));\n    }\n  };\n\n  const filterResults = (query) => {\n    const filtered = uniqueCards.filter(\n      (card) =>\n        card.name.toLowerCase().includes(query.toLowerCase()) ||\n        (card.colors && card.colors.join(', ').toLowerCase().includes(query.toLowerCase()))\n    );\n    setFilteredCards(filtered);\n  };\n\n  const uniqueCardsMap = new Map();\n\n  cards.forEach((card) => {\n    if (!uniqueCardsMap.has(card.name)) {\n      uniqueCardsMap.set(card.name, card);\n    }\n  });\n\n  const uniqueCards = Array.from(uniqueCardsMap.values());\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n      <div style={{ flex: 1 }}>\n        <h2>Search Results</h2>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Filter results...\"\n            onChange={(e) => filterResults(e.target.value)}\n            style={{ marginBottom: '10px' }}\n          />\n        </div>\n        {filteredCards.length === 0 ? (\n          <p>No cards found.</p>\n        ) : (\n          <div>\n            <ul style={{ listStyle: 'none', padding: 0 }}>\n              {filteredCards.map((card) => (\n                <li key={card.id} style={{ marginBottom: '20px', padding: '10px', border: '1px solid #ddd', borderRadius: '8px', display: 'flex', width: '600px' }}>\n                  {card.imageUrl && (\n                    <div style={{ marginRight: '10px' }}>\n                      <img src={card.imageUrl} alt={card.name} style={{ width: '250px', height: '300px', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }} />\n                    </div>\n                  )}\n                  <div>\n                    <strong>Name:</strong> {card.name} <br />\n                    <strong>Artist:</strong> {card.artist || 'N/A'} <br />\n                    <strong>Set:</strong> {card.set || 'N/A'} <br />\n                    <strong>Color:</strong> {card.colors ? card.colors.join(', ') : 'N/A'} <br />\n                    <strong>Text:</strong> {card.text || 'N/A'} <br />\n                    <button onClick={() => addToDeck(card)} style={{ marginTop: '10px', background: '#4CAF50', color: 'white', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer', border: 'none' }}>\n                      Add to Deck\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      <DeckDisplay deck={deck} cardList={cards} />\n    </div>\n  );\n};\n\nexport default CardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}